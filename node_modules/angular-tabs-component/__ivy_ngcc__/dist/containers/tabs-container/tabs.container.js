import { Component, Input, EventEmitter, Output } from "@angular/core";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

var _c0 = function (a0) { return { "active": a0 }; };
function TabsContainer_li_1_Template(rf, ctx) { if (rf & 1) {
    var _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 3);
    ɵngcc0.ɵɵlistener("click", function TabsContainer_li_1_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); var tab_r1 = ctx.$implicit; var ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.selectTab(tab_r1); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var tab_r1 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c0, tab_r1.active == true));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", tab_r1.tabTitle, " ");
} }
var _c1 = ["*"];
var TabsContainer = /** @class */ (function () {
    function TabsContainer() {
        this.currentTabChange = new EventEmitter();
        this.ifTabSelected = false;
        this.tabs = [];
    }
    TabsContainer.prototype.addTab = function (tab) {
        this.tabs.push(tab);
    };
    TabsContainer.prototype.selectTab = function (tab) {
        this.tabs.forEach(function (tab) {
            tab.active = false;
        });
        tab.active = true;
        this.currentTabChange.emit(tab);
    };
    TabsContainer.prototype.isDisabled = function () {
        if (this.disabled) {
            return "block";
        }
        else
            return "none";
    };
    TabsContainer.prototype.ngAfterContentInit = function () {
        var _this = this;
        this.tabs.forEach(function (tab) {
            if (tab.active) {
                _this.selectTab(tab);
                _this.ifTabSelected = true;
            }
        });
        if (!this.ifTabSelected) {
            this.selectTab(this.tabs[0]);
        }
    };
    /** @nocollapse */
    TabsContainer.ctorParameters = function () { return []; };
    TabsContainer.propDecorators = {
        'disabled': [{ type: Input },],
        'currentTabChange': [{ type: Output },],
    };
TabsContainer.ɵfac = function TabsContainer_Factory(t) { return new (t || TabsContainer)(); };
TabsContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabsContainer, selectors: [["tabs"]], inputs: { disabled: "disabled" }, outputs: { currentTabChange: "currentTabChange" }, ngContentSelectors: _c1, decls: 4, vars: 3, consts: [[1, "tabs__tab-bar"], ["class", "tabs__tab", 3, "ngClass", "click", 4, "ngFor", "ngForOf"], [1, "overlay"], [1, "tabs__tab", 3, "ngClass", "click"]], template: function TabsContainer_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "ul", 0);
        ɵngcc0.ɵɵtemplate(1, TabsContainer_li_1_Template, 2, 4, "li", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelement(3, "div", 2);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.tabs);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵstyleProp("display", ctx.isDisabled());
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass], styles: ["*[_ngcontent-%COMP%]{margin:0px;padding:0px}[_nghost-%COMP%]{padding:10px 10px;display:flex;flex-direction:column;position:relative;min-height:calc(100vh - 20px)}.tabs__tab-bar[_ngcontent-%COMP%]{align-self:center;border-radius:4px;overflow:hidden;margin-bottom:-12px;z-index:1000;border:1px solid #c9c9c9}.tabs__tab[_ngcontent-%COMP%]{padding:4px 10px;display:inline-block;background-color:white;cursor:pointer}.tabs__tab.active[_ngcontent-%COMP%]{background-color:#6fbbff !important;color:white}.overlay[_ngcontent-%COMP%]{background:#e0e0e0;opacity:0.5;bottom:0;left:0;position:absolute;right:0;top:0;z-index:1000}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabsContainer, [{
        type: Component,
        args: [{
                selector: "tabs",
                template: "\n    <ul class=\"tabs__tab-bar\">\n      <li *ngFor=\"let tab of tabs\" (click)=\"selectTab(tab)\" class=\"tabs__tab\" [ngClass]=\"{'active': tab.active == true}\">\n        {{ tab.tabTitle }}\n      </li>\n    </ul>\n    <ng-content></ng-content>\n    <div class=\"overlay\" [style.display]=\"isDisabled()\"></div>\n  ",
                styles: ["\n    *{margin:0px;padding:0px}:host{padding:10px 10px;display:flex;flex-direction:column;position:relative;min-height:calc(100vh - 20px)}.tabs__tab-bar{align-self:center;border-radius:4px;overflow:hidden;margin-bottom:-12px;z-index:1000;border:1px solid #c9c9c9}.tabs__tab{padding:4px 10px;display:inline-block;background-color:white;cursor:pointer}.tabs__tab.active{background-color:#6fbbff !important;color:white}.overlay{background:#e0e0e0;opacity:0.5;bottom:0;left:0;position:absolute;right:0;top:0;z-index:1000}\n  "]
            }]
    }], function () { return []; }, { currentTabChange: [{
            type: Output
        }], disabled: [{
            type: Input
        }] }); })();
    return TabsContainer;
}());
export { TabsContainer };

//# sourceMappingURL=tabs.container.js.map